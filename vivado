library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity conv1 is
    Port ( x : in STD_LOGIC_VECTOR (3 downto 0);
           y : in STD_LOGIC_VECTOR (3 downto 0);
           z : out STD_LOGIC_VECTOR (3 downto 0);
           clk : in STD_LOGIC);
end conv1;

architecture Behavioral of conv1 is

signal A: STD_LOGIC_VECTOR(11 downto 0) := "000000000000";
signal B: STD_LOGIC_VECTOR(11 downto 0) := "000000000000";
signal k1, k2, k3, k4 : STD_LOGIC;
signal l1, l2, l3, l4 : integer range 0 to 10;
signal count  : integer range 0 to 10;
signal clk_count:integer := 0;
constant totalcount:integer := 50000000;

begin

process (clk) 
begin

    if(clk'event and clk = '1') then
        clk_count <= clk_count + 1; 
    if(clk_count > totalcount) then
            clk_count <= 0;
            
    A(7 downto 4) <= x(3 downto 0);
    B(7 downto 4) <= y(3 downto 0);
    
    for i in 0 to 8 loop
        k1 <= (A(11-i) and B(7));
        k2 <= (A(10-i) and B(6));
        k3 <= (A(9-i) and B(5));
        k4 <= (A(8-i) and B(4));
        
        if k1 = '1' then
            l1 <= 1;
        elsif k1 = '0' then
            l1 <= 0;
         end if;
         
         if k2 = '1' then
            l2 <= 1;
         elsif k2 = '0' then
            l2 <= 0;
         end if;
                 
         if k3 = '1' then
            l3 <= 1;
         elsif k3 = '0' then
            l3 <= 0;
         end if;
                         
         if k4 = '1' then
            l4 <= 1;
         elsif k4 = '0' then
            l4 <= 0;
         end if;
        
        
        count <= l1 + l2 + l3 + l4;
        
        if count = 0 then 
        z(0) <= '0';
        z(1) <= '0';
        z(2) <= '0';
        z(3) <= '0';
           
        elsif count  = 1 then 
        z(0) <= '1';
        z(1) <= '0';
        z(2) <= '0';
        z(3) <= '0'; 
        elsif count  = 2 then 
          z(0) <= '0';
        z(1) <= '1';
        z(2) <= '0';
        z(3) <= '0'; 
           elsif count  = 3 then 
            z(0) <= '1';
           z(1) <= '1';
           z(2) <= '0';
           z(3) <= '0';     
        elsif count  = 4 then
            z(0) <= '0';
        z(1) <= '0';
        z(2) <= '1';
        z(3) <= '0';
        end if;
    end loop;
        
    end if;
    end if;
end process;

end Behavioral;


---------------------------------------------------------------------------------------------

## This file is a general .xdc for the ZYBO Rev B board
## To use it in a project:
## - uncomment the lines corresponding to used pins
## - rename the used signals according to the project


##Clock signal
set_property -dict { PACKAGE_PIN L16   IOSTANDARD LVCMOS33 } [get_ports { clk }]; #IO_L11P_T1_SRCC_35 Sch=sysclk
#create_clock -add -name sys_clk_pin -period 8.00 -waveform {0 4} [get_ports { clk }];


##Switches
set_property -dict { PACKAGE_PIN G15   IOSTANDARD LVCMOS33 } [get_ports { x[0] }]; #IO_L19N_T3_VREF_35 Sch=SW0
set_property -dict { PACKAGE_PIN P15   IOSTANDARD LVCMOS33 } [get_ports { x[1] }];  #IO_L24P_T3_34 Sch=SW1
set_property -dict { PACKAGE_PIN W13   IOSTANDARD LVCMOS33 } [get_ports { x[2] }]; #IO_L4N_T0_34 Sch=SW2
set_property -dict { PACKAGE_PIN T16   IOSTANDARD LVCMOS33 } [get_ports { x[3] }]; #IO_L9P_T1_DQS_34 Sch=SW3


##Buttons
set_property -dict { PACKAGE_PIN R18   IOSTANDARD LVCMOS33 } [get_ports { y[0] }]; #IO_L20N_T3_34 Sch=BTN0
set_property -dict { PACKAGE_PIN P16   IOSTANDARD LVCMOS33 } [get_ports { y[1] }]; #IO_L24N_T3_34 Sch=BTN1
set_property -dict { PACKAGE_PIN V16   IOSTANDARD LVCMOS33 } [get_ports { y[2] }]; #IO_L18P_T2_34 Sch=BTN2
set_property -dict { PACKAGE_PIN Y16   IOSTANDARD LVCMOS33 } [get_ports { y[3] }]; #IO_L7P_T1_34 Sch=BTN3


##LEDs
set_property -dict { PACKAGE_PIN M14   IOSTANDARD LVCMOS33 } [get_ports { z[0] }]; #IO_L23P_T3_35 Sch=LED0
set_property -dict { PACKAGE_PIN M15   IOSTANDARD LVCMOS33 } [get_ports { z[1] }]; #IO_L23N_T3_35 Sch=LED1
set_property -dict { PACKAGE_PIN G14   IOSTANDARD LVCMOS33 } [get_ports { z[2] }]; #IO_0_35=Sch=LED2
set_property -dict { PACKAGE_PIN D18   IOSTANDARD LVCMOS33 } [get_ports { z[3] }]; #IO_L3N_T0_DQS_AD1N_35 Sch=LED3
